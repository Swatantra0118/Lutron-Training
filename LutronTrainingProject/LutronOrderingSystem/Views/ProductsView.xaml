<Window x:Class="LutronOrderingSystem.Views.ProductsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:helper="clr-namespace:LutronOrderingSystem.Helpers"
        xmlns:local="clr-namespace:LutronOrderingSystem.Views"
        xmlns:viewmodels="clr-namespace:LutronOrderingSystem.ViewModels"
        d:DataContext="{d:DesignInstance Type=viewmodels:ProductsViewModel}"
        mc:Ignorable="d"
        Title="Lutron Ordering System" Height="450" Width="800">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <helper:Int32ToBooleanConverter x:Key="Int32ToBooleanConverter"/>

        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                        BorderBrush="Black" 
                        BorderThickness="0.5"
                        CornerRadius="5">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#b6ccb4" />
                                    <GradientStop Offset="0.5" Color="#FFFFFF" />
                                    <GradientStop Offset="1" Color="#abf2a5" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#e4ede4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientStop Offset="0" Color="#abf2a5" />
                <GradientStop Offset="0.5" Color="#FFFFFF" />
                <GradientStop Offset="1" Color="#DFF0D8" />
            </LinearGradientBrush>
        </Grid.Background>
        <!-- Side Panel with Buttons -->
        <!--<StackPanel Grid.Column="0" Orientation="Vertical" VerticalAlignment="Top" Margin="10">
            <Button Content="Control Stations" Command="{Binding ShowControlStationsCommand}" Margin="0,0,0,0" />
            <Button Content="Enclosures" Command="{Binding ShowEnclosuresCommand}" />
        </StackPanel>-->

        <!-- Main Content Grid -->
        <Grid Grid.ColumnSpan="2" Margin="10,0,0.333,-0.333">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Control Stations Grid -->
            <TabControl Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,40,0,0" BorderThickness="0" 
            Background="Transparent" SelectedIndex="{Binding SelectedTabIndex}" >
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Grid>
                                        <Border x:Name="Border" 
                                    Background="#e4ede4" 
                                    BorderBrush="Black" 
                                    BorderThickness="0.15897"
                                    CornerRadius="2.56786"
                                      SnapsToDevicePixels="True"
                                            Padding="4,2.5">
                                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                  ContentSource="Header" Margin="10,2"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#9eb89c" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter Property="LayoutTransform">
                                                <Setter.Value>
                                                    <ScaleTransform ScaleX="0.8767" ScaleY="0.87672"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Control Stations">
                    <DataGrid Grid.Row="0" IsReadOnly="True" Margin="0,40,0,0" Visibility="{Binding IsControlStationsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                      ItemsSource="{Binding ControlStations}" AutoGenerateColumns="False" RowHeaderWidth="0" BorderThickness="0">
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="#CCCCCC"/>
                                <Setter Property="Padding" Value="10"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#abf2a5" />
                                <GradientStop Offset="0.5" Color="#FFFFFF" />
                                <GradientStop Offset="1" Color="#DFF0D8" />
                            </LinearGradientBrush>
                        </DataGrid.Background>
                        <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <!--<DataTrigger Binding="{Binding Quantity}" Value="7">-->
                            <DataTrigger Binding="{Binding Quantity, Converter={StaticResource Int32ToBooleanConverter}}" Value="True">
                                <Setter Property="Background" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Model ID" Binding="{Binding ModelId}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Model Display String" Binding="{Binding ModelDisplayString}" />
                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" />
                    <DataGridTextColumn Header="Number of Buttons" Binding="{Binding NumberOfButtons}" />
                    <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" />

                    <!-- Edit & Delete Buttons Column -->
                    <DataGridTemplateColumn Header="Edit/Delete">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Width="50" 
        Height="23" Margin="5" Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                            CommandParameter="{Binding}" Style="{StaticResource CustomButtonStyle}">
                                        <TextBlock Text="Edit" 
               Foreground="Black" 
               FontSize="12"/>
                                    </Button>
                                    <Button Width="50" 
        Height="23" Margin="5" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                            CommandParameter="{Binding ModelId}" Style="{StaticResource CustomButtonStyle}">
                                        <TextBlock Text="Delete" 
               Foreground="Black" 
               FontSize="12"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    

                    <!-- Add to Cart Button Column -->
                    <DataGridTemplateColumn Header="Add to Cart">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Width="80" 
        Height="23" Margin="5" 
                                        Command="{Binding DataContext.AddToCartCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                        CommandParameter="{Binding ModelId}" Style="{StaticResource CustomButtonStyle}">
                                    <TextBlock Text="Add to Cart" 
               Foreground="Black" 
               FontSize="12"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
                </TabItem>
                
                <!-- Enclosures Grid -->
                <TabItem Header="Enclosures">
            <DataGrid Grid.Row="0" IsReadOnly="True" Margin="0,40,0,0" Visibility="{Binding IsEnclosuresVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                      ItemsSource="{Binding Enclosures}" AutoGenerateColumns="False" RowHeaderWidth="0" BorderThickness="0">
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="#CCCCCC"/>
                                <Setter Property="Padding" Value="10"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#abf2a5" />
                                <GradientStop Offset="0.5" Color="#FFFFFF" />
                                <GradientStop Offset="1" Color="#DFF0D8" />
                            </LinearGradientBrush>
                        </DataGrid.Background>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Quantity, Converter={StaticResource Int32ToBooleanConverter}}" Value="True">
                                <Setter Property="Background" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Model ID" Binding="{Binding ModelId}" />
                    <DataGridTextColumn Header="Model Display String" Binding="{Binding ModelDisplayString}" />
                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" />
                    <DataGridTextColumn Header="Mount Type" Binding="{Binding MountType}" />
                    <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" />

                    <!-- Edit & Delete Buttons Column -->
                    <DataGridTemplateColumn Header="Edit/Delete">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Width="50" 
        Height="23" Margin="5" 
                                            Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                            CommandParameter="{Binding}" Style="{StaticResource CustomButtonStyle}">
                                        <TextBlock Text="Edit" 
               Foreground="Black" 
               FontSize="12"/>
                                    </Button>
                                    <Button Width="50" 
        Height="23" Margin="5" 
                                            Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                            CommandParameter="{Binding ModelId}" Style="{StaticResource CustomButtonStyle}">
                                        <TextBlock Text="Delete" 
               Foreground="Black" 
               FontSize="12"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Add to Cart Button Column -->
                    <DataGridTemplateColumn Header="Add to Cart">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Width="80" 
        Height="23" Margin="5" 
                                        Command="{Binding DataContext.AddToCartCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                        CommandParameter="{Binding ModelId}" Style="{StaticResource CustomButtonStyle}">
                                    <TextBlock Text="Add to Cart" 
               Foreground="Black" 
               FontSize="12"/>
                                </Button>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
                </TabItem>
            </TabControl>
            <Button Width="100" 
        Height="25"  HorizontalAlignment="Left" VerticalAlignment="Top" Command="{Binding AddCommand}" Margin="10,10,0,0" Style="{StaticResource CustomButtonStyle}">
                <TextBlock Text="Add Device" 
               Foreground="Black" 
               FontSize="14"/>
            </Button>



            <Button Width="100" 
        Height="25" 
        HorizontalAlignment="Right" 
        VerticalAlignment="Top" 
        Margin="0,10,10,0" 
                    Command="{Binding DataContext.ShowCartCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    Style="{StaticResource CustomButtonStyle}">
                <TextBlock Text="Show Cart" 
               Foreground="Black" 
               FontSize="14"/>
            </Button>

        </Grid>
    </Grid>
</Window>